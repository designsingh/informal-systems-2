@import url("https://fonts.googleapis.com/css2?family=Glegoo:wght@400;700&family=Inter:wght@400;500&display=swap");

$breakpointDefinitions: (
    xLarge: (
        min-width: 1280px,
        grid-width: 1170px,
    ),
    large: (
        min-width: 1024px,
        grid-width: 960px,
    ),
);

$color--accent: #2f87a5;
$color--accent--magenta: #e071dc;
$color--accent--burgundy: #ab534d;
$color--foreground: #0b2d7c;
$color--foreground--faded: rgba($color--foreground, 0.6);
$color--background: white;
$color--background--faded: rgba($color--foreground, 0.1);

$border--hairline: 1px solid rgba($color--foreground, 0.1);
$border--thick: 4px solid rgba($color--foreground, 0.1);

$borderRadius--normal: 4px;

$boxShadow--normal: 2px 2px 4px 0 rgba(black, 0.2);
$boxShadow--inset: 2px 2px 4px 0 rgba(black, 0.2) inset;

$textShadow--lightOnDark: 1px 1px 3px rgba(black, 0.6);

$fontFamily--body: Inter, sans-serif;
$fontFamily--display: Glegoo, sans-serif;

$fontWeight--body--normal: 400;
$fontWeight--body--bold: 500;
$fontWeight--display: 700;

$whiteSpace--xtight: calc(var(--gridUnit) * 0.25);
$whiteSpace--tight: calc(var(--gridUnit) * 0.5);
$whiteSpace--normal: var(--gridUnit);
$whiteSpace--loose: calc(var(--gridUnit) * 2);
$whiteSpace--xloose: calc(var(--gridUnit) * 4);

@mixin responsiveStylesFor($breakpointName) {
    $breakpointDefinition: map-get($breakpointDefinitions, $breakpointName);
    $minWidth: map-get($breakpointDefinition, "min-width");

    @media screen and (min-width: $minWidth) {
        @content;
    }
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-size: inherit;
    line-height: 1.5em;
    list-style-type: none;
    text-decoration: none;
    color: unset;
}
:root {
    --gridUnit: 30px;

    --fontSize--small: 16px;
    --fontSize--normal: 24px;
    --fontSize--large: 40px;
    --fontSize--xLarge: 80px;

    --lineHeight--small: 1.5em;
    --lineHeight--normal: 1.5em;
    --lineHeight--large: 1.5em;
    --lineHeight--xLarge: 1em;

    --avatarSize--normal: 60px;
    --avatarSize--large: 120px;

    background: $color--background;
    color: $color--foreground;
    font-family: $fontFamily--body;
    font-size: var(--fontSize--normal);
    line-height: var(--lineHeight--normal);
    padding-bottom: $whiteSpace--xloose;
}
.avatar,
.avatarSpacer {
    align-items: center;
    border-radius: 1000px;
    display: flex;
    height: var(--avatarSize, --avatarSize--normal);
    justify-content: center;
    width: var(--avatarSize, --avatarSize--normal);
}
.avatar {
    background-color: $color--accent;
    box-shadow: $boxShadow--inset;
    color: white;
    text-shadow: $textShadow--lightOnDark;
}
.avatarSpacer {
    font-size: var(--fontSize--large);
}
.avatar--placeholder {
    background-color: $color--foreground;
}
.avatarList {
    display: flex;
    justify-content: space-between;
    align-items: center;
}
.avatarList--large {
    --avatarSize: var(--avatarSize--large);
}
@keyframes bgBubblePulsate {
    from {
        opacity: 0.2;
    }
    to {
        opacity: 0.6;
    }
}
@keyframes bgBubbleRotate {
    from {
        transform: scale(2) rotate(0) translate(1%, 1%);
    }
    to {
        transform: scale(2) rotate(359deg) translate(1%, 1%);
    }
}
.bgBubbles {
    height: 100vh;
    left: 0;
    position: fixed;
    top: 0;
    width: 100vw;
    z-index: -1;
}
.bgBubble {
    --animation-duration: 4s;

    animation-direction: alternate;
    animation-duration: var(--animation-duration), calc(var(--animation-duration) * 2);
    animation-iteration-count: infinite;
    animation-name: bgBubblePulsate, bgBubbleRotate;
    animation-timing-function: ease;
    border-radius: 100vw;
    height: 700px;
    position: fixed;
    width: 700px;
}
.bgBubble--a {
    --animation-duration: 4s;

    left: -20vw;
    top: -20vh;
}
.bgBubble--b {
    --animation-duration: 6s;

    right: -5vw;
    top: -40vh;
}
.bgBubble--c {
    --animation-duration: 5s;

    right: -30vw;
    bottom: -20vh;
}
[class*="button--"] {
    border: none;
    display: inline-block;
    padding: $whiteSpace--tight $whiteSpace--normal;
}
.button--primary {
    background-color: $color--foreground;
    color: white;
    font-family: $fontFamily--display;
    font-size: var(--fontSize--small);
    font-weight: $fontWeight--display;

    .highContrast & {
        background-color: white;
        color: $color--foreground;
    }
}
.formField {
    cursor: pointer;
    @extend .u-rowGap--xtight;
}
.formField-label {
    font-size: var(--fontSize--small);
    font-weight: bold;
}
.grid {
    margin: 0 auto;

    $largeBreakpointDefinition: map-get($breakpointDefinitions, "large");
    $xLargeBreakpointDefinition: map-get($breakpointDefinitions, "xLarge");

    @include responsiveStylesFor("large") {
        width: map-get($largeBreakpointDefinition, "grid-width");
    }

    @include responsiveStylesFor("xLarge") {
        width: map-get($xLargeBreakpointDefinition, "grid-width");
    }
}
.grid-container {
    & + & {
        margin-top: $whiteSpace--loose;
    }
}
[class*="heading--"] {
    font-family: $fontFamily--display;
    font-weight: $fontWeight--display;
}
.heading--1 {
    font-size: var(--fontSize--xLarge);
    line-height: var(--lineHeight--xLarge);
}
.heading--2 {
    font-size: var(--fontSize--large);
    line-height: var(--lineHeight--large);
}
.heading--3 {
    font-size: var(--fontSize--normal);
    line-height: var(--lineHeight--normal);
    font-family: $fontFamily--display;
    font-weight: $fontWeight--display;
}
.heading--4 {
    font-family: $fontFamily--body;
    font-weight: $fontWeight--body--bold;
}
.highContrast {
    background-color: $color--foreground;
    color: white;
}
.horizontalRule {
    border-bottom: $border--hairline;
    border-color: $color--foreground;
}
.iconifiedMetaData {
    display: flex;
    color: $color--foreground--faded;
    column-gap: $whiteSpace--normal;
    font-size: var(--fontSize--small);
}
.iconifiedMetaData-labelText {
    display: none;
}
.iconifiedMetaData-labelValuePair {
    display: flex;
    column-gap: $whiteSpace--tight;
}
.input {
    border: $border--hairline;
    border-color: $color--foreground;
    padding: $whiteSpace--tight $whiteSpace--normal;
    width: 100%;

    &::placeholder {
        color: $color--foreground--faded;
        font-size: var(--fontSize--small);
        position: relative;
        top: -2px;
    }

    .highContrast & {
        border-color: white;
        background-color: transparent;
        color: white;

        &::placeholder {
            color: rgba(white, 0.6);
        }
    }
}
[class*="logo--"] {
    // background-image set in _layouts/default.html
    background-size: contain;
    background-repeat: no-repeat;
    display: block;
    font-size: 0;
}
.logo--footer {
    height: 68px;
    width: 170px;
    margin-top: calc(#{$whiteSpace--tight} * -1);
}
.logo--header {
    height: 48px;
    width: 120px;
}
.pill {
    background-color: $color--background--faded;
    border-radius: 1000px;
    color: $color--foreground--faded;
    display: inline-block;
    font-size: var(--fontSize--small);
    padding: 0 $whiteSpace--tight;
    vertical-align: middle;
}
.siteFooter.siteFooter {
    margin-top: $whiteSpace--xloose;
}
.siteHeader {
    align-items: center;
    display: flex;
    font-size: var(--fontSize--small);
    justify-content: space-between;
    margin-bottom: $whiteSpace--loose;
    padding: $whiteSpace--normal 0;
}
.siteHeader-nav {
    font-family: $fontFamily--display;
    font-weight: $fontWeight--display;
}
.siteHeader-menuItems {
    display: flex;
    column-gap: $whiteSpace--normal;
}
.siteHeader-menuItemButton {
    display: block;
    padding-bottom: $whiteSpace--xtight;

    &:focus,
    &:hover {
        color: $color--accent;
    }
    .siteHeader-menuItem--hasSubMenu & {
        align-items: center;
        column-gap: $whiteSpace--xtight;
        display: flex;
    }
}
.siteHeader-menuItem--hasSubMenu {
    position: relative;
}
.siteHeader-menuItem--isActive {
    color: $color--accent;
    position: relative;

    &::after {
        background-color: $color--accent;
        content: "";
        height: 2px;
        left: 0;
        position: absolute;
        right: 0;
        top: 100%;
    }
}
.siteHeader-subMenu {
    background-color: white;
    border-radius: $borderRadius--normal;
    box-shadow: $boxShadow--normal;
    left: calc(#{$whiteSpace--tight} * -1);
    min-width: 200px;
    opacity: 0;
    padding: $whiteSpace--xtight;
    pointer-events: none;
    position: absolute;
    top: 100%;
    transform: scale(0.8);
    transition: all 0.125s;
    transition-property: opacity, transform;
    white-space: nowrap;

    .siteHeader-menuItem--hasSubMenu:focus-within > &,
    .siteHeader-menuItem--hasSubMenu:hover > & {
        opacity: 1;
        pointer-events: all;
        transform: scale(1);
        transition-delay: 0.25s;
    }
}
.siteHeader-subMenuItemButton {
    display: block;
    padding: $whiteSpace--xtight $whiteSpace--tight;

    &:focus,
    &:hover {
        background-color: rgba($color--accent, 0.1);
        color: $color--accent;
    }
}
.tabbedNav {
    border-bottom: $border--hairline;
}
.tabbedNav-tabs {
    column-gap: $whiteSpace--loose;
    display: flex;
    font-family: $fontFamily--display;
    font-weight: $fontWeight--display;
}
.tabbedNav-tab {
}
.tabbedNav-tabButton {
    display: block;
    padding-bottom: $whiteSpace--tight;

    .tabbedNav-tab.is-active > & {
        border-bottom: $border--thick;
        border-color: $color--accent;
        color: $color--accent;
    }
}
[class*="u-columnGap--"],
[class*="u-rowGap--"] {
    display: flex;
}
[class*="u-columnGap--"] {
    flex-direction: row;
    align-items: center;
}
[class*="u-rowGap--"] {
    align-items: flex-start;
    flex-direction: column;
}
$gridSizes: (
    xtight: $whiteSpace--xtight,
    tight: $whiteSpace--tight,
    normal: $whiteSpace--normal,
    loose: $whiteSpace--loose,
    xloose: $whiteSpace--xloose,
);
@each $gridSizeName, $whiteSpaceValue in $gridSizes {
    .u-columnGap--#{$gridSizeName} {
        column-gap: $whiteSpaceValue;
    }
    .u-rowGap--#{$gridSizeName} {
        row-gap: $whiteSpaceValue;
    }
    .u-padding--#{$gridSizeName} {
        padding: $whiteSpaceValue;
    }
    .u-paddingX--#{$gridSizeName} {
        padding-left: $whiteSpaceValue;
        padding-right: $whiteSpaceValue;
    }
    .u-paddingY--#{$gridSizeName} {
        padding-bottom: $whiteSpaceValue;
        padding-top: $whiteSpaceValue;
    }
}
[class^="u-columns--"] {
    display: grid;
}
@for $i from 1 through 12 {
    .u-columns--#{$i} {
        grid-template-columns: repeat($i, 1fr);
    }
}
.u-screenReadersOnly {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}
